#include "Map.h"

using namespace std;

//Loads the map.
Map::Map(){
	size = 20;
	int blocks[][20] = {
		{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
		{1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1},
		{1,0,1,1,0,1,0,1,1,1,1,1,1,0,1,0,1,1,0,1},
		{1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1},
		{1,0,1,0,1,1,0,0,0,0,0,0,0,0,1,1,0,1,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,1,0,1,1,0,0,0,0,0,0,0,0,1,1,0,1,0,1},
		{1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1},
		{1,0,1,1,0,1,1,1,1,0,0,1,1,1,1,0,1,1,0,1},
		{1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1},
		{1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1},
		{1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1},
		{1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1},
		{1,0,1,0,1,1,0,0,0,0,0,0,0,0,1,1,0,1,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,1,0,1,1,0,0,0,0,0,0,0,0,1,1,0,1,0,1},
		{1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1},
		{1,0,1,1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,1},
		{1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1},
		{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}
	};
	for(int i = 0; i < size; i++){
		for(int j = 0; j < size; j++){
			mapBlocks[i][j] = blocks[i][j];
		}
	}

}

/*
* Get that memory back!!
*/
Map::~Map(){
	delete(mapBlocks);
}

/*
* Returns a 1 if there is a wall and 0 if it is a free path.
*/
int Map::getBlock(int x, int y){
	return mapBlocks[x][y];
}

/*
* Returns the maps length in blocks.
*/
int Map::mapSize(){
	return size;
}

